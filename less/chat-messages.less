.chatMessage {
    .vCenter {
        vertical-align: middle;
    }
    .center {
        text-align: center;
    }
    .right {
        text-align: right;
    }
    .left {
        text-align: left;
    }
    .floatRight {
        float: right;
    }
    .floatLeft {
        float: left;
    }
    .fitToContent {
        display: inline-block;
    }
    .flexCenter {
        display: flex;
        align-items: center;
        overflow: hidden;
    }
    .smallInput {
        display: inline-block;
        width: 50px;
    }
    .mediumInput {
        display: inline-block;
        width: 100px;
    }
    .itemSection {
        padding-top: 0.5em;
    }
    .editor {
        min-height: 250px;
    }
    textarea {
        min-height: 80px;
    }
}

.outerheaven {
    // Common styling for card headers
    .card-header {
        grid-area: header;
        .item-name {
            text-align: center;
            margin: 0px 1em 0.5em 1em;
        }

        img {
            max-width: 32px;
            max-height: 32px;
        }
    }

    // Common styling for info boxes marked by a bordered background
    .content-box {
        border-radius: 0.5em;
        background: rgba(0, 0, 0, 0.1);
        padding: 0.2em;

        > header,
        header h4 {
            font-weight: bold;
            margin-bottom: 0;
        }
    }

    // Coloring for warning signs
    .warning {
        font-weight: bold;
        color: darkorange;
    }

    // Compact styling for lists
    ul,
    ol {
        margin: 0;
        padding: 0;
    }

    // Common styling for apply buttons
    button.apply {
        max-height: 32px;
        max-width: 32px;
    }

    // Description blocks for various item uses
    .description {
        .description-content {
            transition: max-height 0.75s ease-in-out;
            max-height: 1.5rem;
            overflow: hidden;
            -webkit-mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
            mask-image: linear-gradient(to bottom, rgba(0, 0, 0, 1), rgba(0, 0, 0, 0));
        }
        .description-content.expanded {
            transition: max-height 0.75s ease-in-out;
            max-height: 20rem;
            overflow-y: auto;
            -webkit-mask-image: none;
            mask-image: none;
        }
    }

    // On Use Effects
    .effects {
        grid-area: effects;
        margin: 0;

        > ul.effect-list {
            margin: 0;
        }

        .effect {
            .icon {
                max-width: 32px;
                max-height: 32px;
                align-self: center;
            }

            &:not(:first-of-type) {
                border-top: 1px groove rgba(0, 0, 0, 0.2);
            }
            &:nth-child(even) {
                background: unset; // Remove background styling used in sheets
            }
        }
    }
    // ======================
    // Specific action styles
    // ======================

    // Weapon reload
    &.reload,
    &.item-use {
        gap: 0.3em;
    }

    // Weapon attack
    &.weapon-attack {
        display: grid;
        grid-template-areas:
            "header header"
            "description description"
            "attack-details ammo-range"
            "damage-details attack-costs"
            "properties properties"
            "target-results target-results"
            "effects effects";
        grid-template-columns: 1fr 1fr;
        grid-template-rows: auto;
        gap: 0.3em;

        .attack-details,
        .ammo-range,
        .damage-details,
        .attack-costs,
        .properties {
            .dice-flavor {
                font-weight: bold;
            }

            .ammo,
            .range,
            .number-of-attacks,
            .ap {
                margin: 0.1em;
            }
        }

        .description {
            grid-area: description;
        }
        .attack-details {
            grid-area: attack-details;
        }
        .ammo-range {
            grid-area: ammo-range;
            max-height: 47px;
        }
        .damage-details {
            grid-area: damage-details;
        }
        .attack-costs {
            grid-area: attack-costs;
            max-height: 47px;
            button {
                max-width: 3em;
                max-height: 3em;
            }
        }
        .properties {
            grid-area: properties;
        }

        .effects {
            grid-area: effects;
        }

        .target-results {
            grid-area: target-results;
            gap: 0.2em;

            .target-result {
                // Add border between targets
                gap: 0.2em;

                &:not(:first-of-type) {
                    border-top: 1px groove rgba(0, 0, 0, 0.2);
                }

                .target-icon {
                    max-width: 32px;
                    max-height: 32px;
                    align-self: center;
                }
                .target-name {
                    font-weight: bold;
                }
                .target-range {
                    text-align: right;
                }
                .target-rolls {
                    gap: 0.2em;
                }
                .target-attack {
                    .hit {
                        color: #18520b;
                    }
                    .miss {
                        color: #aa0200;
                    }
                }
                .target-damage {
                    margin-top: unset;
                }
                .apply-damage {
                    max-height: 32px;
                    max-width: 32px;
                }
            }
            .target-damage {
                margin-top: unset;
                .min-damage {
                    color: #aa0200;
                }
            }
        }
    }
}
